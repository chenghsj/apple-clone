{"version":3,"sources":["components/MacbookScroll.jsx","components/MacbookPro16.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["gsap","registerPlugin","ScrollTrigger","MacbookScroll","localNavContainer","useRef","macbookContainer","macbookTitle","macbookTitleH1","macbookTitleH2","macbookCanvas","useEffect","timeline","fromTo","y","opacity","duration","stagger","to","scrollTrigger","trigger","start","endTrigger","end","pin","macbookContext","getContext","macbookImages","macbookObj","frame","render","clearRect","width","height","drawImage","i","img","Image","src","toString","padStart","push","scrub","markers","pinSpacing","frameCount","snap","onUpdate","onload","className","ref","el","href","MacbookPro16","Header","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.615c0131.chunk.js","sourcesContent":["import React, { useEffect, useRef, useCallback } from \"react\";\nimport \"../styles/MacbookScroll.scss\";\n\nimport { gsap, ScrollTrigger } from \"gsap/all\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst frameCount = 115;\nconst currentFrame = (index) =>\n  `https://www.apple.com/105/media/us/macbook-pro-16/2019/fa0563a0-8534-4e01-a62a-081b87805fea/anim/hero/large/large_${index\n    .toString()\n    .padStart(4, \"0\")}.jpg`;\n\nfunction MacbookScroll() {\n  let localNavContainer = useRef(null);\n  let macbookContainer = useRef(null);\n  let macbookTitle = useRef(null);\n  let macbookTitleH1 = useRef(null);\n  let macbookTitleH2 = useRef(null);\n  let macbookCanvas = useRef(null);\n\n  useEffect(() => {\n    //landing animation\n    let landingAnim = gsap.timeline();\n    landingAnim\n      .fromTo(\n        [macbookTitleH1, macbookTitleH2],\n        {\n          y: 40,\n          opacity: 0,\n        },\n        { y: 0, opacity: 1, duration: 1.5, stagger: 0.15 }\n      )\n      .fromTo(\n        macbookCanvas,\n        { opacity: 0 },\n        { opacity: 1, duration: 1.5 },\n        \"<0.1\"\n      );\n    //local Navbar\n    let localNavAnim = gsap.timeline();\n    localNavAnim.to(localNavContainer, {\n      scrollTrigger: {\n        y: 0,\n        trigger: localNavContainer,\n        start: \"top top\",\n        endTrigger: \"html\",\n        end: \"bottom bottom\",\n        // markers: true,\n        pin: true,\n      },\n    });\n    //macbook canvas\n    const macbookContext = macbookCanvas.getContext(\"2d\");\n    const macbookImages = [];\n    const macbookObj = { frame: 0 };\n\n    const render = () => {\n      macbookContext.clearRect(0, 0, macbookCanvas.width, macbookCanvas.height);\n      macbookContext.drawImage(macbookImages[macbookObj.frame], 0, 0);\n    };\n\n    for (let i = 0; i < frameCount; i++) {\n      const img = new Image();\n      img.src = currentFrame(i);\n      macbookImages.push(img);\n    }\n    let macbookContainerAnim = gsap.timeline({\n      scrollTrigger: {\n        trigger: macbookContainer,\n        start: \"top +=120px\",\n        end: \"bottom-=40% +=50%\",\n        scrub: 0.6,\n        markers: true,\n        pin: true,\n        pinSpacing: false,\n      },\n    });\n    macbookContainerAnim\n      .to(macbookTitle, { y: -20, opacity: 0, duration: 0.5 })\n      .to(\n        macbookObj,\n        {\n          frame: frameCount - 1,\n          snap: \"frame\",\n          onUpdate: render,\n          duration: 2.5,\n        },\n        0\n      );\n\n    macbookImages[0].onload = render;\n  }, []);\n\n  return (\n    <div className=\"macbook-scroll\">\n      <div ref={(el) => (localNavContainer = el)} className=\"ln-container\">\n        <div className=\"ln-content\">\n          <div className=\"ln-title\">\n            <a href=\"#\">\n              MacBook&nbsp;Pro\n              <span>16 吋機型</span>\n            </a>\n          </div>\n          <div className=\"ln-menu\">\n            <div className=\"ln-menu-tray\">\n              <ul>\n                <li>\n                  <span>概覽</span>\n                </li>\n                <li>\n                  <span>技術規格</span>\n                </li>\n              </ul>\n            </div>\n            <div className=\"ln-actions\">\n              <div className=\"ln-action-button\">\n                <span>購買</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div ref={(el) => (macbookContainer = el)} className=\"macbook-container\">\n        <div ref={(el) => (macbookTitle = el)} className=\"macbook-title\">\n          <h1 ref={(el) => (macbookTitleH1 = el)}>Macbook Pro</h1>\n          <h2 ref={(el) => (macbookTitleH2 = el)}>\n            最強大，\n            <br />\n            速配最強者。\n          </h2>\n        </div>\n        <canvas\n          className=\"macbook-canvas\"\n          width={1096}\n          height={900}\n          ref={(el) => (macbookCanvas = el)}\n        />\n        <div className=\"section-content\">\n          <p>\n            全新 MacBook&nbsp;Pro\n            專為挑戰極限、改變世界的你而設計，是我們迄今所打造最強大的筆記型電腦。配備引人入勝的\n            16 吋 Retina 顯示器、超高速處理器、新一代繪圖處理、MacBook&nbsp;Pro\n            歷來最大的電池容量，以及全新巧控鍵盤與龐大的儲存容量，這正是為強者而生，最極致的專業筆電。\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MacbookScroll;\n","import React from \"react\";\nimport MacbookScroll from \"./MacbookScroll\";\n\nfunction MacbookPro16() {\n  return (\n    <div>\n      <MacbookScroll />\n    </div>\n  );\n}\n\nexport default MacbookPro16;\n","import React from \"react\";\nimport \"../styles/Header.scss\";\n\nfunction Header() {\n  return <div className=\"header-container\"></div>;\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport MacbookPro16 from \"./components/MacbookPro16\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MacbookPro16 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}